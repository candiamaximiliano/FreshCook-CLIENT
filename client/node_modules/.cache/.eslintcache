[{"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\index.js":"1","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\App.js":"3","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\setupInterceptors.js":"4","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\store\\index.js":"5","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\tokenService.js":"6","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\api.js":"7","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\auth.js":"8","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Unauthorized.jsx":"9","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Home\\Home.component.jsx":"10","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Login\\Login.component.jsx":"11","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\Routes\\Protected.jsx":"12","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\LandingPage\\LandingPage.jsx":"13","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\CreateRecipe\\RecipeCreate.jsx":"14","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Register\\Register.component.jsx":"15","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Detail\\Detail.jsx":"16","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\NotFound\\NotFound.jsx":"17","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Profile\\Profile.component.jsx":"18","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\index.js":"19","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\authService.js":"20","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\types.js":"21","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\recipes.js":"22","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\helpers\\regex.js":"23","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByDiet.jsx":"24","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Card\\Card.jsx":"25","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByScore.jsx":"26","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Pagination\\Pagination.jsx":"27","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\SearchBar\\SearchBar.jsx":"28","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByAlphabet.jsx":"29","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByCreated.jsx":"30","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\message.js":"31","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\recipes.js":"32","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\auth.js":"33","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\getTokenData.js":"34","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\filters.js":"35"},{"size":772,"mtime":1649648775069,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1649452428996,"results":"38","hashOfConfig":"37"},{"size":3571,"mtime":1653591518370,"results":"39","hashOfConfig":"37"},{"size":1547,"mtime":1649649255269,"results":"40","hashOfConfig":"37"},{"size":335,"mtime":1649513122388,"results":"41","hashOfConfig":"37"},{"size":885,"mtime":1653591231751,"results":"42","hashOfConfig":"37"},{"size":188,"mtime":1649648700045,"results":"43","hashOfConfig":"37"},{"size":1869,"mtime":1653589819318,"results":"44","hashOfConfig":"37"},{"size":161,"mtime":1653309905792,"results":"45","hashOfConfig":"37"},{"size":4745,"mtime":1653678980558,"results":"46","hashOfConfig":"37"},{"size":2724,"mtime":1649823974823,"results":"47","hashOfConfig":"37"},{"size":611,"mtime":1653596234138,"results":"48","hashOfConfig":"37"},{"size":795,"mtime":1649722904172,"results":"49","hashOfConfig":"37"},{"size":14078,"mtime":1653685842457,"results":"50","hashOfConfig":"37"},{"size":6252,"mtime":1653685951135,"results":"51","hashOfConfig":"37"},{"size":4902,"mtime":1653676117822,"results":"52","hashOfConfig":"37"},{"size":852,"mtime":1649724544563,"results":"53","hashOfConfig":"37"},{"size":1178,"mtime":1649770631299,"results":"54","hashOfConfig":"37"},{"size":247,"mtime":1649653539050,"results":"55","hashOfConfig":"37"},{"size":894,"mtime":1653589852926,"results":"56","hashOfConfig":"37"},{"size":779,"mtime":1649652394918,"results":"57","hashOfConfig":"37"},{"size":1639,"mtime":1649653431238,"results":"58","hashOfConfig":"37"},{"size":370,"mtime":1649861639811,"results":"59","hashOfConfig":"37"},{"size":1338,"mtime":1653677857136,"results":"60","hashOfConfig":"37"},{"size":704,"mtime":1653665328228,"results":"61","hashOfConfig":"37"},{"size":862,"mtime":1649784321341,"results":"62","hashOfConfig":"37"},{"size":648,"mtime":1649767453939,"results":"63","hashOfConfig":"37"},{"size":1234,"mtime":1649766544304,"results":"64","hashOfConfig":"37"},{"size":1061,"mtime":1649784289863,"results":"65","hashOfConfig":"37"},{"size":1010,"mtime":1649767044613,"results":"66","hashOfConfig":"37"},{"size":376,"mtime":1649454833491,"results":"67","hashOfConfig":"37"},{"size":2965,"mtime":1653677951337,"results":"68","hashOfConfig":"37"},{"size":1286,"mtime":1653586015224,"results":"69","hashOfConfig":"37"},{"size":237,"mtime":1653591142374,"results":"70","hashOfConfig":"37"},{"size":510,"mtime":1649653428677,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1mtevg3",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"75"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"75"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\index.js",[],[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\App.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\setupInterceptors.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\store\\index.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\tokenService.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\api.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\auth.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Unauthorized.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Home\\Home.component.jsx",["184","185","186"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Card from \"../../components/Card/Card\";\r\nimport FilterByAlphabet from \"../../components/Filters/FilterByAlphabet\";\r\nimport FilterByDiet from \"../../components/Filters/FilterByDiet\";\r\nimport FilterByCreated from \"../../components/Filters/FilterByCreated\";\r\nimport FilterByScore from \"../../components/Filters/FilterByScore\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\r\n// import Detail from \"../../pages/Detail/Detail\";\r\nimport { getAllRecipes } from \"../../redux/actions/recipes\";\r\n\r\nimport Styles from \"./Home.module.css\";\r\nimport reloadIcon from \"../../images/autorenew_white_24dp.svg\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //Una vez montado el componente traigo todas las recetas:\r\n  useEffect(() => {\r\n    dispatch(getAllRecipes());\r\n  }, []);\r\n\r\n  //Me traigo todo el estado recipes\r\n  const allRecipes = useSelector((state) => state.recipes.recipes);\r\n\r\n  //currentPage para que si cambio de página el home se vuelva a renderizar:\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  //order para que el home se vuelva a renderizar si se cambia el filtro o el orden:\r\n  const [order, setOrder] = useState(\"\");\r\n\r\n  //Lógica para que la pagina sepa cuantas recetas mostrar por página:\r\n  const [recipesPerPage, setRecipesPerPage] = useState(9);\r\n  const indexOfLastRecipe = currentPage * recipesPerPage;\r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n  const currentRecipes = allRecipes?.slice(\r\n    indexOfFirstRecipe,\r\n    indexOfLastRecipe\r\n  );\r\n\r\n  const paginationNumber = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handlerClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getAllRecipes());\r\n  };\r\n\r\n  const helper = (arr) => {\r\n    let result = [];\r\n    arr?.map((el) => {\r\n      return result.push(el.name);\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className={Styles.homeContainer}>\r\n      <div className={Styles.navContainer}>\r\n        <div className={Styles.newRecipeButtonContainer}>\r\n          <Link to=\"/recipe\">\r\n            <p className={Styles.newRecipeButton}>Create Your Own Recipe!</p>\r\n          </Link>\r\n        </div>\r\n        <SearchBar />\r\n        <button\r\n          className={Styles.reloadButton}\r\n          onClick={(e) => {\r\n            handlerClick(e);\r\n          }}\r\n        >\r\n          <img\r\n            className={Styles.reloadIcon}\r\n            src={reloadIcon}\r\n            alt=\"reloadIcon\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <div className={Styles.filters}>\r\n        <FilterByAlphabet setCurrentPage={setCurrentPage} setOrder={setOrder} />\r\n        <FilterByDiet setCurrentPage={setCurrentPage} setOrder={setOrder} />\r\n        <FilterByScore setCurrentPage={setCurrentPage} setOrder={setOrder} />\r\n        <FilterByCreated setCurrentPage={setCurrentPage} setOrder={setOrder} />\r\n      </div>\r\n      <Pagination\r\n        recipesPerPage={recipesPerPage}\r\n        allRecipes={allRecipes.length}\r\n        paginationNumber={paginationNumber}\r\n      />\r\n      <div className={Styles.cardsContainer}>\r\n        {currentRecipes?.map((recipe, index) => {\r\n          if (recipe.createdInDb) {\r\n            return (\r\n              <div key={index} className={Styles.cardRecipe}>\r\n                <Link key={index} to={\"/home/\" + recipe.id}>\r\n                  <Card\r\n                    key={recipe.id}\r\n                    id={recipe.id}\r\n                    name={recipe.name}\r\n                    image={recipe.image}\r\n                    score={recipe.healthScore}\r\n                    diets={helper(recipe.diets)}\r\n                  />\r\n                </Link>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div key={index} className={Styles.cardRecipe}>\r\n                <Link key={index} to={\"/home/\" + recipe.id}>\r\n                  <Card\r\n                    key={recipe.id}\r\n                    id={recipe.id}\r\n                    name={recipe.name}\r\n                    image={recipe.image}\r\n                    score={recipe.healthScore}\r\n                    diets={recipe.diets?.map((diet) => {\r\n                      return diet;\r\n                    })}\r\n                  />\r\n                </Link>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <Pagination\r\n        recipesPerPage={recipesPerPage}\r\n        allRecipes={allRecipes.length}\r\n        paginationNumber={paginationNumber}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Login\\Login.component.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\Routes\\Protected.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\LandingPage\\LandingPage.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\CreateRecipe\\RecipeCreate.jsx",["187","188","189"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Navigate, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { postRecipe, getDiets } from \"../../redux/actions/recipes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport newRecipeStyles from \"./RecipeCreate.module.css\";\r\nimport { validateName } from \"../../helpers/regex\";\r\nimport api from \"../../services/api\";\r\nimport veganBW from \"../../images/VeganBW.png\";\r\nimport veganColor from \"../../images/VeganColor.png\";\r\nimport vegetarianBW from \"../../images/VegetarianBW.png\";\r\nimport vegetarianColor from \"../../images/VegetarianColor.png\";\r\nimport glutenFreeBW from \"../../images/GlutenFreeBW.png\";\r\nimport glutenFreeColor from \"../../images/GlutenFreeColor.png\";\r\n\r\nexport function validate(input) {\r\n  let errors = {};\r\n\r\n  // input.name ? (errors.name = \"\") : (errors.name = \"You must name the recipe\");\r\n\r\n  // input.summary\r\n  //   ? (errors.summary = \"\")\r\n  //   : (errors.summary = \"You must provide a summary\");\r\n\r\n  // input.diets.length < 1\r\n  //   ? (errors.diets = \"Choose at least one diet\")\r\n  //   : (errors.diets = \"\");\r\n\r\n  // if (!input.image.includes(\"https://\") && !input.image.includes(\"http://\")) {\r\n  //   errors.image = \"This isn't a valid image address\";\r\n  // } else {\r\n  //   errors.image = \"\";\r\n  // }\r\n\r\n  // if (input.score < 1 || input.score > 100) {\r\n  //   errors.score = \"Number required. Must be a number between 1-100\";\r\n  // }\r\n  // if (input.healthScore < 1 || input.healthScore > 100) {\r\n  //   errors.healthScore = \"Number required. Must be a number between 1-100\";\r\n  // }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default function RecipeCreate() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const diets = useSelector((state) => state.recipes.diets);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [success, setSuccess] = useState(false);\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    summary: \"\",\r\n    healthScore: 0,\r\n    step: \"\",\r\n    stepByStep: [],\r\n    vegan: false,\r\n    vegetarian: false,\r\n    glutenFree: false,\r\n    diets: [],\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    setErrors(\r\n      validate({\r\n        ...input,\r\n        [e.target.name]: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCheck = (e) => {\r\n    if (e.target.checked) {\r\n      setInput({\r\n        ...input,\r\n        diets: [...input.diets, e.target.value],\r\n      });\r\n    } else {\r\n      const diets = input.diets.filter((diet) => {\r\n        return diet !== e.target.value;\r\n      });\r\n      setInput({\r\n        ...input,\r\n        diets: diets,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      input.name &&\r\n      input.image &&\r\n      input.summary &&\r\n      input.healthScore &&\r\n      input.stepByStep &&\r\n      input.diets\r\n    ) {\r\n      dispatch(postRecipe(input));\r\n      setSuccess(true);\r\n      // alert(\"Recipe created correctly\");\r\n      setErrors(\"\");\r\n      setInput({\r\n        name: \"\",\r\n        image: \"\",\r\n        summary: \"\",\r\n        healthScore: 0,\r\n        step: \"\",\r\n        stepByStep: [],\r\n        vegan: false,\r\n        vegetarian: false,\r\n        glutenFree: false,\r\n        diets: [],\r\n      });\r\n      navigate(\"/Home\");\r\n    } else {\r\n      // alert(\"DATA REQUIRED\");\r\n      setSuccess(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getDiets());\r\n  }, [dispatch]);\r\n\r\n  // Cargar imagen de tipo File\r\n  const [file, setFile] = useState(null);\r\n  const [format, setFormat] = useState(\"\");\r\n  const [uploadSuccess, setUploadSuccess] = useState(\"no image selected\");\r\n\r\n  const saveFile = async (e) => {\r\n    setFile(e.target.files[0]);\r\n    setUploadSuccess(e.target.files[0]?.name);\r\n    var formatImage = e.target.files[0]?.name.split(\".\");\r\n    setFormat(formatImage[formatImage?.length - 1]);\r\n    await uploadUserFile(e);\r\n  };\r\n\r\n  const uploadUserFile = async (e) => {\r\n    const code = uuidv4();\r\n    console.log(file);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"format\", format);\r\n    try {\r\n      await api.post(`upload/static/${code}.${format}`, formData);\r\n      setInput({\r\n        ...input,\r\n        image: code + \".\" + format,\r\n      });\r\n      // alert(\"Imagen cargada con Exito\", \"\", \"success\");\r\n    } catch (ex) {\r\n      console.error(ex);\r\n    }\r\n  };\r\n\r\n  // const [addSteps, setAddSteps] = useState([1]);\r\n\r\n  // let i = 0;\r\n  // const addStep = () => {\r\n  //   i = i + 1;\r\n  //   setAddSteps([...addSteps, i]);\r\n  //   console.log(addSteps);\r\n  // };\r\n\r\n  const inputStep = useRef();\r\n\r\n  const [deleted, setDeleted] = useState({\r\n    wasDelete: false,\r\n  });\r\n\r\n  const addStep = () => {\r\n    setInput({\r\n      ...input,\r\n      stepByStep: [...input.stepByStep, inputStep.current.defaultValue],\r\n      step: \"\",\r\n    });\r\n    deleted.wasDelete\r\n      ? setDeleted({\r\n          wasDelete: false,\r\n        })\r\n      : console.log(false);\r\n  };\r\n\r\n  const deleteStep = (value) => (event) => {\r\n    let stepLength = input.stepByStep.length;\r\n    let index = input.stepByStep.indexOf(value);\r\n    input.stepByStep.splice(index, 1);\r\n    if (stepLength > input.stepByStep.length) {\r\n      setDeleted({\r\n        wasDelete: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleVegan = () => {\r\n    input.vegan\r\n      ? setInput({\r\n          ...input,\r\n          vegan: false,\r\n        })\r\n      : setInput({\r\n          ...input,\r\n          vegan: true,\r\n        });\r\n  };\r\n  const handleVegetarian = () => {\r\n    input.vegetarian\r\n      ? setInput({\r\n          ...input,\r\n          vegetarian: false,\r\n        })\r\n      : setInput({\r\n          ...input,\r\n          vegetarian: true,\r\n        });\r\n  };\r\n  const handleGlutenFree = () => {\r\n    input.glutenFree\r\n      ? setInput({\r\n          ...input,\r\n          glutenFree: false,\r\n        })\r\n      : setInput({\r\n          ...input,\r\n          glutenFree: true,\r\n        });\r\n  };\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  return (\r\n    <div className={newRecipeStyles.container}>\r\n      <header className={newRecipeStyles.header}>\r\n        <h1 className={newRecipeStyles.title}>\r\n          <strong>\r\n            {currentUser.username.charAt(0).toUpperCase() +\r\n              currentUser.username.slice(1)}\r\n          </strong>{\" \"}\r\n          make your own recipe!\r\n        </h1>\r\n      </header>\r\n      <hr className={newRecipeStyles.hr}></hr>\r\n      <form\r\n        onSubmit={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n        className={newRecipeStyles.form}\r\n      >\r\n        <div className={newRecipeStyles.inputContainer}>\r\n          <input\r\n            className={newRecipeStyles.input}\r\n            type=\"text\"\r\n            value={input.name}\r\n            name=\"name\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n            placeholder=\"Name\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {errors.name && <p>{errors.name}</p>}\r\n        </div>\r\n        <div className={newRecipeStyles.inputFileContainer}>\r\n          <input\r\n            id=\"inputTag\"\r\n            type=\"file\"\r\n            accept=\"image/x-png,image/jpeg\"\r\n            className={newRecipeStyles.inputFile}\r\n            name=\"image\"\r\n            multiple={false}\r\n            ref={fileInput}\r\n            placeholder=\"Image\"\r\n            onChange={(e) => {\r\n              saveFile(e);\r\n            }}\r\n          />{\" \"}\r\n          <button\r\n            type=\"button\"\r\n            className={newRecipeStyles.fileButton}\r\n            onClick={() => fileInput.current.click()}\r\n          >\r\n            <i className=\"fa fa-2x fa-camera\"></i> <br />\r\n            <br />\r\n            {uploadSuccess === \"no image selected\" ? \"Select image\" : null}{\" \"}\r\n            {uploadSuccess === \"no image selected\" ? null : uploadSuccess}{\" \"}\r\n          </button>\r\n          {errors.image && <p>{errors.image}</p>}\r\n        </div>\r\n        <div className={newRecipeStyles.inputTextAreaContainer}>\r\n          <textarea\r\n            className={newRecipeStyles.inputTextArea}\r\n            type=\"text-area\"\r\n            value={input.summary}\r\n            name=\"summary\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n            placeholder=\"Write a summary\"\r\n            autoComplete=\"off\"\r\n          />\r\n          {errors.summary && <p>{errors.summary}</p>}\r\n        </div>\r\n        <div className={newRecipeStyles.inputContainer}>\r\n          <label>Health Score:</label>\r\n          <input\r\n            className={newRecipeStyles.input}\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            value={input.healthScore}\r\n            name=\"healthScore\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n            placeholder=\"Health score\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <div className={newRecipeStyles.scoreSpan}>\r\n            <span className={newRecipeStyles.labelDiet}>\r\n              {input.healthScore}\r\n            </span>\r\n          </div>\r\n          {errors.healthScore && <p>{errors.healthScore}</p>}\r\n        </div>\r\n        <div className={newRecipeStyles.inputContainer}>\r\n          <h3 className={newRecipeStyles.labelDiet}>Directions:</h3>\r\n          <input\r\n            ref={inputStep}\r\n            className={newRecipeStyles.input}\r\n            type=\"text\"\r\n            value={input.step}\r\n            name=\"step\"\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n            placeholder=\"Write instruction\"\r\n            autoComplete=\"off\"\r\n          />{\" \"}\r\n          <button\r\n            type=\"button\"\r\n            className={newRecipeStyles.stepButton}\r\n            onClick={addStep}\r\n          >\r\n            Add direction\r\n          </button>\r\n          <ol className={newRecipeStyles.stepList}>\r\n            {input.stepByStep?.map((s, i) => {\r\n              return (\r\n                <>\r\n                  <br key={uuidv4()} />\r\n                  <div\r\n                    className={newRecipeStyles.stepItemContainer}\r\n                    key={uuidv4()}\r\n                  >\r\n                    <div className={newRecipeStyles.buttonItem}>\r\n                      <li className={newRecipeStyles.stepItem} key={uuidv4()}>\r\n                        {s}\r\n                      </li>\r\n                      <button\r\n                        type=\"button\"\r\n                        className={newRecipeStyles.buttonDelete}\r\n                        onClick={deleteStep(s)}\r\n                      >\r\n                        x\r\n                      </button>{\" \"}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </ol>\r\n          {errors.stepByStep && <p>{errors.stepByStep}</p>}\r\n        </div>\r\n        <label className={newRecipeStyles.labelDiet}>Recipe is:</label>\r\n        <div className={newRecipeStyles.inputContainerDiet}>\r\n          <button\r\n            type=\"button\"\r\n            className={newRecipeStyles.buttonDiet}\r\n            onClick={handleVegan}\r\n          >\r\n            {input.vegan ? (\r\n              <img\r\n                className={newRecipeStyles.imgDiet}\r\n                src={veganColor}\r\n                alt=\"vegan\"\r\n              />\r\n            ) : (\r\n              <img\r\n                className={newRecipeStyles.imgDiet}\r\n                src={veganBW}\r\n                alt=\"vegan\"\r\n              />\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={newRecipeStyles.buttonDiet}\r\n            onClick={handleVegetarian}\r\n          >\r\n            {input.vegetarian ? (\r\n              <img\r\n                className={newRecipeStyles.imgDiet}\r\n                src={vegetarianColor}\r\n                alt=\"vegetarian\"\r\n              />\r\n            ) : (\r\n              <img\r\n                className={newRecipeStyles.imgDiet}\r\n                src={vegetarianBW}\r\n                alt=\"vegetarian\"\r\n              />\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={newRecipeStyles.buttonDiet}\r\n            onClick={handleGlutenFree}\r\n          >\r\n            {input.glutenFree ? (\r\n              <img\r\n                className={newRecipeStyles.imgDiet}\r\n                src={glutenFreeColor}\r\n                alt=\"glutenFree\"\r\n              />\r\n            ) : (\r\n              <img\r\n                className={newRecipeStyles.imgDiet}\r\n                src={glutenFreeBW}\r\n                alt=\"glutenFree\"\r\n              />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <label className={newRecipeStyles.labelDiet}>Diets</label>\r\n        <div className={newRecipeStyles.checkboxContainer}>\r\n          {diets?.map((diet) => (\r\n            <label key={diet.id + \"label\"}>\r\n              <input\r\n                className={newRecipeStyles.checkbox}\r\n                type=\"checkbox\"\r\n                name={diet.name}\r\n                value={diet.name}\r\n                key={diet.id + \"diet\"}\r\n                onChange={(e) => {\r\n                  handleCheck(e);\r\n                }}\r\n              />\r\n              {diet.name.charAt(0).toUpperCase() + diet.name.slice(1)}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button className={newRecipeStyles.button} type=\"submit\">\r\n          Create Recipe\r\n        </button>\r\n        <Link to=\"/home\">\r\n          <button className={newRecipeStyles.button}>Back To Home</button>\r\n        </Link>\r\n      </form>\r\n      {success ? (\r\n        <h2 className={newRecipeStyles.message}>Created Successfully</h2>\r\n      ) : null}\r\n      {Object.keys(errors).length > 0 ? (\r\n        <h2 className={newRecipeStyles.message}>Something went wrong!</h2>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Register\\Register.component.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Detail\\Detail.jsx",["190"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { getDetail } from \"../../redux/actions\";\r\nimport detailStyles from \"./Detail.module.css\";\r\nimport glutenFreeColor from \"../../images/GlutenFreeColor.png\";\r\nimport glutenFreeBW from \"../../images/GlutenFreeColor.png\";\r\nimport vegetarianColor from \"../../images/VegetarianColor.png\";\r\nimport vegetarianBW from \"../../images/VegetarianBW.png\";\r\nimport veganColor from \"../../images/VeganColor.png\";\r\nimport veganBW from \"../../images/VeganBW.png\";\r\n\r\nexport default function Detail() {\r\n  const { id } = useParams();\r\n  const [details, setDetails] = useState([]);\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    //   dispatch(getDetail(id));\r\n    // }, []);\r\n    axios.get(\"http://localhost:3001/recipes/\" + id).then((response) => {\r\n      setDetails(response.data);\r\n      console.log(details);\r\n    });\r\n    // return () => {\r\n    //   setDetails(null);\r\n    // };\r\n  }, []);\r\n\r\n  // const details = useSelector((state) => state.detail);\r\n\r\n  return (\r\n    <div className={detailStyles.detailContainer}>\r\n      <div className={detailStyles.titleContainer}>\r\n        <h1 className={detailStyles.title}>{details.name}</h1>\r\n      </div>\r\n      <hr></hr>\r\n      <div className={detailStyles.first}>\r\n        <img\r\n          className={detailStyles.imageRecipe}\r\n          src={details.image}\r\n          alt=\"content not found\"\r\n        />\r\n        <div className={detailStyles.parragraphContainer}>\r\n          <p\r\n            className={detailStyles.parragraph}\r\n            dangerouslySetInnerHTML={{ __html: details.summary }}\r\n          ></p>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n      <div className={detailStyles.dietsContainer}>\r\n        <div className={detailStyles.subtitleContainer}>\r\n          <h3 className={detailStyles.subtitle}>Diets:</h3>\r\n        </div>\r\n        <section className={detailStyles.logoSection}>\r\n          {details.vegetarian ? (\r\n            <img\r\n              className={detailStyles.logo}\r\n              src={vegetarianColor}\r\n              alt=\"content not found\"\r\n            />\r\n          ) : (\r\n            <img\r\n              className={detailStyles.logo}\r\n              src={vegetarianBW}\r\n              alt=\"content not found\"\r\n            />\r\n          )}\r\n          {details.vegan ? (\r\n            <img\r\n              className={detailStyles.logo}\r\n              src={veganColor}\r\n              alt=\"content not found\"\r\n            />\r\n          ) : (\r\n            <img\r\n              className={detailStyles.logo}\r\n              src={veganBW}\r\n              alt=\"content not found\"\r\n            />\r\n          )}\r\n          {details.glutenFree ? (\r\n            <img\r\n              className={detailStyles.logo}\r\n              src={glutenFreeColor}\r\n              alt=\"content not found\"\r\n            />\r\n          ) : (\r\n            <img\r\n              className={detailStyles.logo}\r\n              src={glutenFreeBW}\r\n              alt=\"content not found\"\r\n            />\r\n          )}\r\n        </section>\r\n        <ul className={detailStyles.dietsList}>\r\n          {details.diets?.map((diet, index) => (\r\n            <li className={detailStyles.dietItem} key={index}>\r\n              {diet}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <hr></hr>\r\n      <div className={detailStyles.second}>\r\n        <div className={detailStyles.subtitleContainerScore}>\r\n          {details.dishTypes && (\r\n            <h3 className={detailStyles.subtitle}>Dish Types:</h3>\r\n          )}\r\n        </div>\r\n        <ul className={detailStyles.uList}>\r\n          {details.dishTypes?.map((dish, index) => (\r\n            <li className={detailStyles.dishItem} key={index}>\r\n              {dish}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className={detailStyles.subtitleContainerScore}>\r\n          <h3 className={detailStyles.scoreSubtitle}>Health Score:</h3>\r\n        </div>\r\n        <div className={detailStyles.parragraphContainerScore}>\r\n          <p className={detailStyles.score}>{details.healthScore}</p>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n      <section className={detailStyles.stepSection}>\r\n        <div className={detailStyles.subtitleContainer}>\r\n          <h3 className={detailStyles.subtitle}>Step By Step:</h3>\r\n        </div>\r\n        <ol className={detailStyles.stepsList}>\r\n          {details.stepByStep?.map((step, index) => (\r\n            <li className={detailStyles.step} key={index}>\r\n              {step}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </section>\r\n      <div className={detailStyles.goBackContainer}>\r\n        <Link to=\"/home\">\r\n          <span className={detailStyles.goBack}>Go back</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\NotFound\\NotFound.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\pages\\Profile\\Profile.component.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\index.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\authService.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\types.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\recipes.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\helpers\\regex.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByDiet.jsx",["191"],[],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterRecipesByDiets } from \"../../redux/actions/filters\";\r\nimport { getDiets } from \"../../redux/actions/recipes\";\r\nimport filterStyles from \"./Filter.module.css\";\r\n\r\nexport default function FiltroByDiet({ setCurrentPage, setOrder }) {\r\n  const dispatch = useDispatch();\r\n  const diets = useSelector((state) => state.recipes.diets);\r\n\r\n  useEffect(() => {\r\n    dispatch(getDiets());\r\n  }, []);\r\n\r\n  function handleFilterDiet(e) {\r\n    e.preventDefault();\r\n\r\n    dispatch(filterRecipesByDiets(e.target.value));\r\n\r\n    setCurrentPage(1);\r\n    setOrder(`ordenado ${e.target.value}`);\r\n  }\r\n\r\n  return (\r\n    <select\r\n      onChange={(e) => handleFilterDiet(e)}\r\n      className={filterStyles.nameFilter}\r\n    >\r\n      <option\r\n        defaultValue={true}\r\n        disabled=\"disabled\"\r\n        className={filterStyles.optionSelect}\r\n      >\r\n        Filter by diet\r\n      </option>\r\n      <option key={0} value=\"all\" className={filterStyles.optionSelect}>\r\n        All Diets\r\n      </option>\r\n      {diets?.map((diet) => (\r\n        <option\r\n          value={diet.name}\r\n          key={diet.id}\r\n          className={filterStyles.optionSelect}\r\n        >\r\n          {diet.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Card\\Card.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByScore.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Pagination\\Pagination.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\SearchBar\\SearchBar.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByAlphabet.jsx",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\components\\Filters\\FilterByCreated.jsx",["192"],[],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterCreated } from \"../../redux/actions/filters\";\r\nimport filterStyles from \"./Filter.module.css\";\r\n\r\nexport default function FilterByCreated({ setCurrentPage, setOrder }) {\r\n  const dispatch = useDispatch();\r\n  const diets = useSelector((state) => state.recipes.diets);\r\n\r\n  function handleFilterCreated(e) {\r\n    e.preventDefault();\r\n\r\n    dispatch(filterCreated(e.target.value));\r\n\r\n    setCurrentPage(1);\r\n    setOrder(`ordenado ${e.target.value}`);\r\n  }\r\n\r\n  return (\r\n    <select\r\n      className={filterStyles.nameFilter}\r\n      onChange={(e) => handleFilterCreated(e)}\r\n    >\r\n      <option value=\"all\" className={filterStyles.optionSelect}>\r\n        All\r\n      </option>\r\n      <option value=\"created\" className={filterStyles.optionSelect}>\r\n        Created\r\n      </option>\r\n      <option value=\"exist\" className={filterStyles.optionSelect}>\r\n        Existentes\r\n      </option>\r\n    </select>\r\n  );\r\n}\r\n","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\message.js",["193"],[],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\recipes.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\reducers\\auth.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\services\\getTokenData.js",[],[],"C:\\Users\\Maxim\\Desktop\\FreshCook-app\\client\\src\\redux\\actions\\filters.js",[],[],{"ruleId":"194","severity":1,"message":"195","line":24,"column":6,"nodeType":"196","endLine":24,"endColumn":8,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":33,"column":10,"nodeType":"200","messageId":"201","endLine":33,"endColumn":15},{"ruleId":"198","severity":1,"message":"202","line":36,"column":26,"nodeType":"200","messageId":"201","endLine":36,"endColumn":43},{"ruleId":"198","severity":1,"message":"203","line":3,"column":16,"nodeType":"200","messageId":"201","endLine":3,"endColumn":24},{"ruleId":"198","severity":1,"message":"204","line":3,"column":26,"nodeType":"200","messageId":"201","endLine":3,"endColumn":37},{"ruleId":"198","severity":1,"message":"205","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":22},{"ruleId":"194","severity":1,"message":"206","line":29,"column":6,"nodeType":"196","endLine":29,"endColumn":8,"suggestions":"207"},{"ruleId":"194","severity":1,"message":"195","line":13,"column":6,"nodeType":"196","endLine":13,"endColumn":8,"suggestions":"208"},{"ruleId":"198","severity":1,"message":"209","line":8,"column":9,"nodeType":"200","messageId":"201","endLine":8,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":5,"column":1,"nodeType":"212","endLine":18,"endColumn":2},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["213"],"no-unused-vars","'order' is assigned a value but never used.","Identifier","unusedVar","'setRecipesPerPage' is assigned a value but never used.","'Navigate' is defined but never used.","'useLocation' is defined but never used.","'validateName' is defined but never used.","React Hook useEffect has missing dependencies: 'details' and 'id'. Either include them or remove the dependency array.",["214"],["215"],"'diets' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"216","fix":"220"},"Update the dependencies array to be: [dispatch]",{"range":"221","text":"222"},"Update the dependencies array to be: [details, id]",{"range":"223","text":"224"},{"range":"225","text":"222"},[1017,1019],"[dispatch]",[1093,1095],"[details, id]",[499,501]]