{"ast":null,"code":"import api from \"./api\";\nimport getTokenData from \"./getTokenData\";\nimport TokenService from \"./tokenService\";\n\nconst register = _ref => {\n  let {\n    name,\n    lastname,\n    username,\n    email,\n    password,\n    image\n  } = _ref;\n  return api.post(\"/auth/signup\", {\n    name,\n    lastname,\n    username,\n    email,\n    password,\n    image\n  });\n};\n\nconst login = (username, password) => {\n  return api.post(\"/auth/signin\", {\n    username,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      TokenService.setUser(response.data);\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  TokenService.removeUser();\n};\n\nconst getCurrentUser = () => {\n  const clientSessionStorage = JSON.parse(sessionStorage.getItem(\"user\"));\n  return getTokenData(clientSessionStorage.accessToken);\n};\n\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser\n};\nexport default AuthService;","map":{"version":3,"names":["api","getTokenData","TokenService","register","name","lastname","username","email","password","image","post","login","then","response","data","accessToken","setUser","logout","removeUser","getCurrentUser","clientSessionStorage","JSON","parse","sessionStorage","getItem","AuthService"],"sources":["C:/Users/Maxim/Desktop/FreshCook-app/client/src/services/authService.js"],"sourcesContent":["import api from \"./api\";\r\nimport getTokenData from \"./getTokenData\";\r\nimport TokenService from \"./tokenService\";\r\n\r\nconst register = ({ name, lastname, username, email, password, image }) => {\r\n  return api.post(\"/auth/signup\", {\r\n    name,\r\n    lastname,\r\n    username,\r\n    email,\r\n    password,\r\n    image,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return api\r\n    .post(\"/auth/signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        TokenService.setUser(response.data);\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  TokenService.removeUser();\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  const clientSessionStorage = JSON.parse(sessionStorage.getItem(\"user\"));\r\n  return getTokenData(clientSessionStorage.accessToken);\r\n};\r\n\r\nconst AuthService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default AuthService;\r\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAQ,GAAG,QAA0D;EAAA,IAAzD;IAAEC,IAAF;IAAQC,QAAR;IAAkBC,QAAlB;IAA4BC,KAA5B;IAAmCC,QAAnC;IAA6CC;EAA7C,CAAyD;EACzE,OAAOT,GAAG,CAACU,IAAJ,CAAS,cAAT,EAAyB;IAC9BN,IAD8B;IAE9BC,QAF8B;IAG9BC,QAH8B;IAI9BC,KAJ8B;IAK9BC,QAL8B;IAM9BC;EAN8B,CAAzB,CAAP;AAQD,CATD;;AAWA,MAAME,KAAK,GAAG,CAACL,QAAD,EAAWE,QAAX,KAAwB;EACpC,OAAOR,GAAG,CACPU,IADI,CACC,cADD,EACiB;IACpBJ,QADoB;IAEpBE;EAFoB,CADjB,EAKJI,IALI,CAKEC,QAAD,IAAc;IAClB,IAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;MAC7Bb,YAAY,CAACc,OAAb,CAAqBH,QAAQ,CAACC,IAA9B;IACD;;IACD,OAAOD,QAAQ,CAACC,IAAhB;EACD,CAVI,CAAP;AAWD,CAZD;;AAcA,MAAMG,MAAM,GAAG,MAAM;EACnBf,YAAY,CAACgB,UAAb;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAG,MAAM;EAC3B,MAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAA7B;EACA,OAAOvB,YAAY,CAACmB,oBAAoB,CAACL,WAAtB,CAAnB;AACD,CAHD;;AAKA,MAAMU,WAAW,GAAG;EAClBtB,QADkB;EAElBQ,KAFkB;EAGlBM,MAHkB;EAIlBE;AAJkB,CAApB;AAOA,eAAeM,WAAf"},"metadata":{},"sourceType":"module"}